include ./mixin_answer.pug

mixin thread(thread)
    div(class="thread card bg-light mb-4 border-dark" data-thread-id=thread._id)
        div(class="card-header crontainer-fluid")
            div(class="row")
                h6(class="question col-sm-10 my-0 card-title")!= thread.question
                span(class="col-sm-2 text-right font-weight-light")
                    | #{thread.creationDate.getHours()}:#{thread.creationDate.getMinutes()}
                    | #{thread.creationDate.getDate()}/#{thread.creationDate.getMonth()}/#{thread.creationDate.getYear() - 100}

        div(class="card-body")
            div(class="row text-light mx-sm-2")
                div(class="col-1 p-0 mx-2")
                    a(class="threadUpVoteBtn row btn-sm btn-outline-secondary mx-auto justify-content-center" href="#")
                        i(class="fa fa-chevron-up")
                        span(class="sr-only") up vote
                    div(class="row justify-content-center")
                        span(class="votes text-dark")= thread.votes
                    a(class="threadDownVoteBtn row btn-sm btn-outline-secondary mx-auto justify-content-center" href="#")
                        i(class="fa fa-chevron-down")
                        span(class="sr-only") up vote
                div(class="tags col")
            div(class="row")
                a(class="answerButton mx-auto btn btn-primary text-light" href="#")
                    if(thread.answers.length > 0)
                        | Answer
                    else
                        | Be the first to answer
            div(class="row")
                div(class="col text-center")
                    a(class="answersVisibiltyToggler text-primary" href="#")
                        i(class="fa fa-caret-down")
                        span(class="ml-2")
                            span(class="amountAnswers")=thread.answers.length
                            |  answers
            ul(class="answers row list-group list-group-flush" style="display: none")
                each answer in thread.answers
                    +answer(answer)